--- LAB 6_01
create table NHANVIEN (
    MaNV CHAR(5) PRIMARY KEY,
    HoTEN VARCHAR(20),
    NgayVL smalldatetime,
    HSLuong NUMERIC(4,2),
    MaPhong char(5)
);
Go 
create table PHONGBAN (
    MaPhong CHAR(5) PRIMARY KEY,
    TenPhong VARCHAR(25),
    TruongPhong CHAR(5)
)
GO
CREATE table XE (
    MaXe char(5) PRIMARY KEY,
    LoaiXe varchar(20),
    SoChoNgoi int,
    NamSX int

)
go
create table PHANCONG (
    MaPC char(5) PRIMARY KEY,
    MaPV char(5),
    MaXe char(5),
    NgayDi smalldatetime,
    NgayVe smalldatetime,
    NoiDen varchar(25)
)
GO
alter table NHANVIEN 
add CONSTRAINT FK_PB FOREIGN KEY (MAPHONG) REFERENCES PHONGBAN(MAPHONG)

ALTER TABLE PHONGBAN
ADD CONSTRAINT FK_TP FOREIGN KEY (TruongPhong) REFERENCES NHANVIEN(MaNV)

alter table PHANCONG
ADD CONSTRAINT FK_NV FOREIGN KEY (MaPV) REFERENCES NHANVIEN(MaNV)

ALTER TABLE PHANCONG
ADD CONSTRAINT FK_XE FOREIGN KEY (MaXe) REFERENCES XE(MaXe)

ALTER TABLE XE
ADD CONSTRAINT CK_SXXE CHECK (
    NOT (LoaiXe = 'Toyota' AND  NamSX < 2006)
)

GO
CREATE TRIGGER CK_VT
ON PHANCONG
AFTER INSERT, UPDATE
AS
BEGIN 
   IF EXISTS (
    SELECT 1
    FROM PHANCONG, XE, PHONGBAN, NHANVIEN
    WHERE PHANCONG.MaXe = XE.MaXe AND PHANCONG.MaPV = NHANVIEN.MaNV AND
          NHANVIEN.MaPhong = PHONGBAN.MaPhong AND TenPhong = 'Ngoai thanh' AND LoaiXe <> 'Toyota'
   )
   begin 
   ROLLBACK TRANSACTION;
   end 
end; 

-- Tìm nhân viên (MaNV,HoTen) thuộc phòng lái xe “Nội thành” được phân công lái
-- loại xe Toyota có số chỗ ngồi là 4

SELECT MaNV, HoTEN
from NHANVIEN, PHONGBAN, XE, PHANCONG
where NHANVIEN.MaPhong = PHONGBAN.MaPhong AND XE.MaXe = PHANCONG.MaXe AND PHANCONG.MaPV = NHANVIEN.MaNV 
      AND TenPhong = 'Noi thanh' AND LoaiXe = 'Toyota' AND SoChoNgoi = 4


-- Tìm nhân viên(MANV,HoTen) là trưởng phòng được phân công lái tất cả các loại xe.
SELECT NHANVIEN.MaNV, HoTEN
FROM NHANVIEN, PHANCONG, PHONGBAN, XE
WHERE NHANVIEN.MaNV = PHANCONG.MaPV AND XE.MaXe = PHANCONG.MaXe AND NHANVIEN.MaPhong = PHONGBAN.MaPhong 
      AND PHONGBAN.TruongPhong = NHANVIEN.MaNV
GROUP BY NHANVIEN.MaNV, HoTEN
HAVING COUNT(DISTINCT XE.LoaiXe) = (SELECT COUNT( DISTINCT LoaiXe)
                                        FROM XE)

GO
WITH SOLANLAI AS (
    SELECT PHONGBAN.MaPhong, NHANVIEN.MaNV, NHANVIEN.HoTEN, COUNT(*) AS SOLANLAICUANV
    FROM PHONGBAN, PHANCONG, NHANVIEN, XE
    WHERE NHANVIEN.MaNV = PHANCONG.MaPV AND XE.MaXe = PHANCONG.MaXe AND NHANVIEN.MaPhong = PHONGBAN.MaPhong 
          AND PHONGBAN.TruongPhong = NHANVIEN.MaNV
    GROUP BY PHONGBAN.MaPhong, NHANVIEN.MaNV, NHANVIEN.HoTEN
),
MINSOLANLAI AS (
    SELECT MaPhong, MIN(SOLANLAICUANV) AS MINSLL
    FROM SOLANLAI
    GROUP BY MaPhong
)

SELECT SOLANLAI.MaPhong, SOLANLAI.MaNV, SOLANLAI.HoTEN, SOLANLAICUANV
FROM SOLANLAI, MINSOLANLAI
WHERE SOLANLAI.MaPhong = MINSOLANLAI.MaPhong

--- LAB 6_02
CREATE TABLE TACGIA (
    MaTG char(5) PRIMARY KEY,
    HoTen VARCHAR(20),
    DiaChi VARCHAR(50),
    NgSinh smalldatetime,
    SoDT VARCHAR(15)
)
GO
CREATE TABLE SACH (
    MaSach CHAR(5) PRIMARY KEY,
    TenSach VARCHAR(25),
    TheLoai VARCHAR(25),
)
GO
create table TACGIA_SACH(
    MaTG char(5),
    MaSach char(5),
    PRIMARY KEY (MaTG, MaSach)
)
GO
Create TABLE PHATHANH (
    MaPH char(5) NOT NULL,
    MaSach char(5),
    NgayPH smalldatetime,
    SoLuong int,
    NhaXuatBan VARCHAR(20)
)
ALTER TABLE PHATHANH
ALTER COLUMN MaPH char(5) NOT NULL
GO
ALTER TABLE PHATHANH
ADD CONSTRAINT PK_PH PRIMARY KEY (MaPH)

ALTER TABLE PHATHANH
ADD CONSTRAINT CK_NG CHECK (
    NgayPH > (SELECT TACGIA.NgSinh
              FROM TACGIA_SACH, SACH
              WHERE TACGIA_SACH.MaTG = SACH.MaTG AND PHATHANH.MaSach = SACH.MaSach)
)

GO
CREATE TRIGGER CK_NGAY
ON PHATHANH
AFTER INSERT
AS 
BEGIN 
IF EXISTS (
    SELECT 1
    FROM PHATHANH, TACGIA, TACGIA_SACH
    WHERE PHATHANH.MaSach = TACGIA_SACH.MaSach AND TACGIA.MaTG = TACGIA_SACH.MaTG AND NgSinh >= NgayPH
)
BEGIN 
    ROLLBACK TRANSACTION; 
END
END;

GO 
CREATE TRIGGER CK_LOAIXB
ON PHATHANH
AFTER INSERT, UPDATE
AS 
BEGIN 
IF EXISTS (
    SELECT 1
    FROM PHATHANH, SACH 
    WHERE PHATHANH.MaSach = SACH.MaSach AND TheLoai = 'Giao khoa' AND NhaXuatBan <> 'Giao duc'
)
BEGIN
    ROLLBACK TRANSACTION;
END
end;

GO

SELECT TACGIA.MaTG, HoTen, SoDT
FROM TACGIA, SACH, PHATHANH, TACGIA_SACH
WHERE TACGIA.MaTG = TACGIA_SACH.MaTG AND SACH.MaSach = PHATHANH.MaSach AND TACGIA_SACH.MaSach = SACH.MaSach
AND TheLoai = 'Van hoc' AND NhaXuatBan = 'Tre'

SELECT TOP 1 NhaXuatBan, COUNT(DISTINCT TheLoai) AS SLTL
FROM PHATHANH, SACH
WHERE PHATHANH.MaSach = SACH.MaSach
GROUP BY NhaXuatBan
ORDER BY SLTL DESC

GO
WITH COUNTPHATHANH AS (
    SELECT 
        PH.NhaXuatBan, 
        TG.MaTG, 
        TG.HoTen, 
        COUNT(*) AS SoLanPhatHanh
    FROM PHATHANH PH
    JOIN TACGIA_SACH TGS ON PH.MaSach = TGS.MaSach
    JOIN TACGIA TG ON TGS.MaTG = TG.MaTG
    GROUP BY PH.NhaXuatBan, TG.MaTG, TG.HoTen
),  
MAXCOUNTPHATHANH AS (
    SELECT 
        NhaXuatBan, 
        MAX(SoLanPhatHanh) AS MaxPhatHanh
    FROM COUNTPHATHANH
    GROUP BY NhaXuatBan
)

SELECT COUNTPHATHANH.NhaXuatBan, COUNTPHATHANH.MaTG, COUNTPHATHANH.HoTen, SoLanPhatHanh
FROM COUNTPHATHANH, MAXCOUNTPHATHANH
WHERE COUNTPHATHANH.NhaXuatBan = MAXCOUNTPHATHANH.NhaXuatBan AND SoLanPhatHanh = MaxPhatHanh

--- LAB 6_03

CREATE TABLE DOCGIA (
    MADG CHAR(5) PRIMARY KEY,
    HOTEN VARCHAR(30),
    NGAYSINH SMALLDATETIME,
    DIACHI VARCHAR(30),
    SODT VARCHAR(15)
)
GO
CREATE TABLE SACH (
    MASACH CHAR(5) PRIMARY KEY,
    TENSACH VARCHAR(25),
    THELOAI VARCHAR(25),
    NHAXUATBAN VARCHAR(30)
)
GO
CREATE TABLE PHIEUTHUE (
    MAPT CHAR(5) PRIMARY KEY,
    MADG VARCHAR (25),
    NGAYTHUE SMALLDATETIME,
    NGAYTRA SMALLDATETIME,
    SOSACHTHUE INT
)
ALTER TABLE PHIEUTHUE
ALTER COLUMN MADG CHAR(5)

GO
CREATE TABLE CHITIET_PT (
    MAPT CHAR (5),
    MASACH CHAR(5),
    PRIMARY KEY (MAPT, MASACH)
)
GO
ALTER TABLE CHITIET_PT 
ADD CONSTRAINT FK_MASACH FOREIGN KEY (MASACH) REFERENCES SACH(MASACH)

ALTER TABLE CHITIET_PT 
ADD CONSTRAINT FK_MAPT FOREIGN KEY (MAPT) REFERENCES PHIEUTHUE(MAPT)

ALTER TABLE PHIEUTHUE
ADD CONSTRAINT FK_MADG FOREIGN KEY (MADG) REFERENCES DOCGIA(MADG)

ALTER TABLE PHIEUTHUE 
ADD CONSTRAINT CK_MUON CHECK (
    NGAYTRA - NGAYTHUE <= 10
)


GO
CREATE TRIGGER CK_SOSACHMUON
ON PHIEUTHUE
AFTER INSERT, UPDATE
AS 
BEGIN
    -- Kiểm tra sự không khớp giữa số sách thuê trong PHIEUTHUE và CHITIET_PT
    IF EXISTS (
        SELECT 1
        FROM PHIEUTHUE PT
        JOIN (
            SELECT MAPT, COUNT(*) AS SOSACH
            FROM CHITIET_PT
            GROUP BY MAPT
        ) CT ON PT.MAPT = CT.MAPT
        WHERE CT.SOSACH <> PT.SOSACHTHUE
    ) 
    BEGIN
        ROLLBACK TRANSACTION;
        RAISERROR ('Số sách thuê không khớp!', 16, 1);
    END;
END;

GO
CREATE TRIGGER CK_SL
ON PHIEUTHUE
AFTER INSERT, UPDATE
AS 
BEGIN
    IF EXISTS (
        SELECT 1 
        FROM PHIEUTHUE
        JOIN (
            SELECT MAPT, COUNT(*) AS SOSACH
            FROM CHITIET_PT
            GROUP BY MAPT
        ) CT ON CT.MAPT = PHIEUTHUE.MAPT
        WHERE SOSACH <> SOSACHTHUE
    )
    BEGIN
    ROLLBACK TRANSACTION 
    RAISERROR ('Số sách thuê không khớp!', 16, 1);
    END
END;

SELECT DOCGIA.MADG, HOTEN
FROM DOCGIA, SACH, PHIEUTHUE, CHITIET_PT
WHERE DOCGIA.MADG = PHIEUTHUE.MADG AND SACH.MASACH = CHITIET_PT.MASACH
AND PHIEUTHUE.MAPT = CHITIET_PT.MAPT AND THELOAI = 'Tin hoc' AND YEAR(NGAYTHUE) = 2007

SELECT TOP 1 DOCGIA.MADG, HOTEN, COUNT(DISTINCT THELOAI) AS SOTHELOAI
FROM DOCGIA, SACH, PHIEUTHUE, CHITIET_PT
WHERE DOCGIA.MADG = PHIEUTHUE.MADG AND SACH.MASACH = CHITIET_PT.MASACH
AND PHIEUTHUE.MAPT = CHITIET_PT.MAPT
GROUP BY DOCGIA.MADG, HOTEN
ORDER BY SOTHELOAI DESC


-- Tìm các độc giả thuê nhiều thể loại sách nhất
GO
WITH SOLUONGTHELOAI AS (
    SELECT DOCGIA.MADG, HOTEN, COUNT(DISTINCT THELOAI) AS SOTHELOAISACH
    FROM DOCGIA, SACH, PHIEUTHUE, CHITIET_PT
    WHERE DOCGIA.MADG = PHIEUTHUE.MADG AND SACH.MASACH = CHITIET_PT.MASACH
    AND PHIEUTHUE.MAPT = CHITIET_PT.MAPT
    GROUP BY DOCGIA.MADG, HOTEN
),
MAXSOTHELOAI AS (
    SELECT MAX(SOTHELOAISACH) AS MAXSOTHELOAISACH
    FROM SOLUONGTHELOAI
)
SELECT SOLUONGTHELOAI.MADG, HOTEN, MAXSOTHELOAISACH
FROM SOLUONGTHELOAI, MAXSOTHELOAI
WHERE SOLUONGTHELOAI.SOTHELOAISACH = MAXSOTHELOAI.MAXSOTHELOAISACH

-- Trong mỗi thể loại sách, cho biết tên sách được thuê nhiều nhất.

WITH DEMSOLUOMGSACHTHUE AS (
    SELECT THELOAI, SACH.MASACH, TENSACH, COUNT(DISTINCT TENSACH) AS SOLUONG
    FROM SACH, CHITIET_PT
    GROUP BY THELOAI, SACH.MASACH, TENSACH
), 
MAXSOLUOTTHUE AS (
    SELECT THELOAI, MAX(SOLUONG) AS MAXSOLANTHUE
    FROM DEMSOLUOMGSACHTHUE 
    GROUP BY THELOAI
)
SELECT DEMSOLUOMGSACHTHUE.THELOAI, DEMSOLUOMGSACHTHUE.MASACH, TENSACH, SOLUONG
FROM DEMSOLUOMGSACHTHUE, MAXSOLUOTTHUE
WHERE DEMSOLUOMGSACHTHUE.THELOAI = MAXSOLUOTTHUE.THELOAI AND MAXSOLUOTTHUE.MAXSOLANTHUE = DEMSOLUOMGSACHTHUE.SOLUONG


